# "OrdererOrgs" - Definition of Organizations managing the orderer nodes
OrdererOrgs:
  - Name:  Orderer
    Domain: example.com
    EnableNodeOUs: true
    # Specs is an array of Spec entries.  Each Spec entry consists of two fields : Hostname and CommonName

    Specs:
      - Hostname: orderer
        SANS:
          - localhost
# "PeerOrgs" - Definition of organizations managing peer nodes
PeerOrgs:
# ---------------------------------------------------------------------------
  # Org1
  # ---------------------------------------------------------------------------
  - Name: Org1
    Domain: org1.example.com
    EnableNodeOUs: true
    # Allows for the definition of 1 or more hosts that are created sequentially
    # from a template. By default, this looks like "peer%d" from 0 to Count-1.
    # You may override the number of nodes (Count), the starting index (Start)
    # or the template used to construct the name (Hostname).
    # Note: Template and Specs are not mutually exclusive.  You may define both
    # sections and the aggregate nodes will be created for you.  Take care with
    # name collisions
    # ---------------------------------------------------------------------------
    Template:
      Count: 2
      SANS:
        - localhost
      # Start: 5
      # Hostname: {{.Prefix}}{{.Index}} # default
    # ---------------------------------------------------------------------------
    # "Users"
    # ---------------------------------------------------------------------------
    # Count: The number of user accounts _in addition_ to Admin
    # ---------------------------------------------------------------------------
    Users:
      Count: 1
